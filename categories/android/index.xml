<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on Lazily instantiated</title>
    <link>https://aidaissayeva.github.io/categories/android/</link>
    <description>Recent content in android on Lazily instantiated</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2019, Aida Issayeva</copyright>
    <lastBuildDate>Tue, 25 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://aidaissayeva.github.io/categories/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to display notifications in 2020</title>
      <link>https://aidaissayeva.github.io/post/how-to-display-notification-in-2020/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://aidaissayeva.github.io/post/how-to-display-notification-in-2020/</guid>
      <description>Kotlin extensions are very practical. They help to reduce the boilerplate of the code.
Code highlight example: private lateinit var notificationManager: NotificationManager private lateinit var pendingIntent: PendingIntent private lateinit var action: NotificationCompat.Action
override fun onCreate(savedInstanceState: Bundle?) { ... notificationManager = getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager if (Build.VERSION.SDK_INT &amp;gt;= Build.VERSION_CODES.O) { val channel = NotificationChannel( CHANNEL_ID, getString(R.string.notification_title), NotificationManager.IMPORTANCE_HIGH ) notificationManager.createNotificationChannel(channel) } val intent = Intent(this, DetailActivity::class.java) pendingIntent = PendingIntent.getActivity(this, 1, intent, PendingIntent.FLAG_UPDATE_CURRENT) action = NotificationCompat.</description>
    </item>
    
    <item>
      <title>Good and sad examples of extension functions</title>
      <link>https://aidaissayeva.github.io/post/good-and-sad-extensions/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://aidaissayeva.github.io/post/good-and-sad-extensions/</guid>
      <description>This article is based off my talk at Droidcon SF this year.
 Kotlin is well-known for null-safety and extension functions features among android developers. Extension functions provide the ability to make new functionality of an extending class without making changes to it. In addition, the new functionality can be declared outside of the extending class. They&#39;re also very beneficial when you want to tweak an api that can&#39;t be modified.</description>
    </item>
    
  </channel>
</rss>